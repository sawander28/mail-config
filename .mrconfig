# vim:ft=dosini

[DEFAULT]
include = cat /usr/local/lib/stow

lib =
  error(){ printf "\033[1m\033[31mERROR: $@\033[m\n"; exit 1; }
  warning(){ printf "\033[1m\033[1;33mWARNING: $@\033[m\n"; }
  info(){ printf "\033[1m=>\033[33m $@\033[m\n"; }
  on() {
    for host in "$@"; do
		  if [ "${host%@*}" != "${host#*@}" ]; then
			  if [ "$whoami" != "${host%@*}" ]; then
				  continue
				fi
				host="${host#*@}"
			fi
			if [ "$hostname" = "$host" ]; then
				return 0
			fi
		done
		return 1
	}
	myworkstation() {
		on wandsas@z620.local
	}


[$HOME/myrepos/wandsas/shell-env]
checkout = git clone git@rpi3.local:repos/shell-env.git
post_checkout = git remote add github git@github.com:sawander/shell-env.git
stowable = true

[$HOME/myrepos/wandsas/mail]
checkout = git clone git@rpi3.local:repos/mail.git
stowable = true

[$HOME/myrepos/wandsas/sway-desktop]
checkout = git clone git@rpi3.local:repos/sway-desktop.git
post_checkout = git remote add github git@github.com:sawander/sway-desktop.git
stowable = true
skip = true

[$HOME/myrepos/wandsas/mygit]
checkout = git clone git@rpi3.local:repos/mygit.git $MR_REPO
post_checkout = git remote add github git@github.com:sawander/mygit.git
stowable = true


#
# cmdline
#

[$HOME/myrepos/cmdline/extrace]
checkout = git clone https://github.com/leahneukirchen/extrace.git $MR_REPO
clean = rm -f /usr/local/bin/{extrace,pwait}
remote = git_add_remote rpi3 git@rpi3.local:repos/extrace.git
fixups = cd $MR_REPO && make install && info "Compiled $STOW_NAME"

[$HOME/myrepos/cmdline/xe]
checkout = git clone https://github.com/leahneukirchen/xe.git $MR_REPO
remotes = git_add_remote rpi3 git@rpi3.local:repos/xe.git
fixups = cd $MR_REPO && make PREFIX=/usr/local install

[$HOME/myrepos/cmdline/logcatch]
checkout = git clone https://github.com/leahneukirchen/logcatch.git $MR_REPO
remotes = git_add_remote rpi3 git@rpi3.local:repos/logcatch.git
fixups = cd $MR_REPO && make PREFIX=/usr/local install

